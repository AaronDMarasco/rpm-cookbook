#comment This file is the "source" that is generated using markdown-include
#comment "npm install markdown-include" then "./build.js" to generate.

# rpm-cookbook !heading
Cookbook of RPM techniques

## Overview !heading
I (Aaron D. Marasco) have been creating RPM packages since the CentOS 4 timeframe([1], [2], [3]). I decided to collate some of the things I've done before that I keep referencing in new projects, as well as answering some of the most common questions I come across. This should be considered a *complement* and *not a replacement* for the [*Fedora Packaging Guidelines*](https://fedoraproject.org/wiki/Category:Packaging_guidelines). It's also *not* a generic "How To Make RPMs" guide, but more of a "shining a flashlight into a dusty corner to see if I can do *this*."

Each chapter is a separate directory, so any source code files are transcluded by [Travis-CI](https://travis-ci.com/github/AaronDMarasco/rpm-cookbook) using [`markdown-include`](https://www.npmjs.com/package/markdown-include). All files are available individually in the git repo &mdash; no need to copy and paste from your browser; clone the source!

Feel free to create a new chapter and submit a PR!
----

#include "../quick_tips/README.md"
----

## How to... !heading
### Define key parameters elsewhere !heading
The techniques to define Version, Release, etc. in another file, environment variable, etc. are shown in most chapters, including [Importing a Pre-Existing File Tree](#importing-a-pre-existing-file-tree). As an alternative to using the `rpmbuild` command line's `--define` option, you can also pre-process the specfile using `sed`, `autotools`, etc. I've seen them all and done them all for various reasons.

### Call rpmbuild from a Makefile !heading
This is shown in most chapters, including [Git Branch or Tag in Release](#git-branch-or-tag-in-release).

### Disable debug packaging !heading
While **not recommended**, because debug packages are very useful, this is shown in most chapters as well.

### Include Jenkins Job Number in Release !heading
This is shown in the `git` chapter as [Jenkins Build Number in Release](#jenkins-build-number-in-release)

### Provide Older Versions of Libraries !heading
This is normally done using a `compat` package; an example is shown in [Symlinks to Latest](#symlinks-to-latest)

----

#include "../pre-existing_file_tree/README.md"
----

#include "../git/README.md"
----

#include "../filtering_provides_requires/README.md"
----

## Having Multiple Versions !heading
#include "../multiple_versions/latest_symlink/README.md"
----

#include "../fake_buildhost/README.md"

  [1]: https://stackoverflow.com/search?q=user:836748+[rpm]
  [2]: https://stackoverflow.com/search?q=user:836748+[rpmbuild]
  [3]: https://stackoverflow.com/search?q=user:836748+[rpm-spec]
